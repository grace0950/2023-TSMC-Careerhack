version: '3.8'

services:
  business:
    container_name: business
    image: ha-business
    build:
      context: ./business
    environment:
      - INVENTORY_URL=http://localhost:4000/inventory
      - STORAGE_URL=http://localhost:6000/storage
    ports:
      - 3000:3000
    restart: always
    depends_on:
      rabbitmq:
        condition: service_healthy

  inventory:
    container_name: inventory
    image: ha-inventory
    build:
      context: ./inventory
    ports:
      - 4000:4000
    restart: always
    depends_on:
      rabbitmq:
        condition: service_healthy
      
  storage:
    container_name: storage
    image: ha-storage
    build:
      context: ./storage
    ports:
      - 6000:6000
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: always
  
  mysql:
    container_name: mysql
    image: mysql:8
    ports:
      - 3307:3307
    environment:
      MYSQL_ROOT_PASSWORD: cerana
      MYSQL_DATABASE: tsmc_storage
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 3s
    restart: always
    volumes:
      - db-data:/var/lib/mysql

  proxy:
    container_name: proxy
    image: nginx:alpine
    ports:
      - 80:80
    # volumes:
    #   - ./nginx.conf:/etc/nginx/nginx.conf:ro

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 3s
    restart: always
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

volumes:
  rabbitmq_data:
  db-data: